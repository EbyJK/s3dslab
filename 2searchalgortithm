// search algorithm implementation
#include&lt;stdio.h&gt;
#include&lt;stdlib.h&gt;
void lin(){
int a[10];
int n,i=0,found=0,j=0;
int item;
printf(&quot;enter size of array:\n&quot;);
scanf(&quot;%d&quot;,&amp;n);
printf(&quot;enter elements to the array:\n&quot;);
        while(i&lt;n){
scanf(&quot;%d&quot;,&amp;a[i]);
i=i+1;
}
printf(&quot;enter item to search\n&quot;);
scanf(&quot;%d&quot;,&amp;item);
for(j=0;j&lt;n;j++){
if(a[j]==item){
found=1;
printf(&quot;item is present in position: %d\n&quot;,(j+1));
//break;
}
}
if(found==0){
printf(&quot;item is not present\n&quot;);
//break;
}
}
void bin(){
int b[10];
int k=0,found1=0,l=0,x,m,pos=-1;
int item;
printf(&quot;Enter size of array\n&quot;);
scanf(&quot;%d&quot;,&amp;x);
printf(&quot;enter sorted array\n&quot;);
printf(&quot;Enter elements to array\n&quot;);
while(k&lt;x){
scanf(&quot;%d&quot;,&amp;b[k]);
k=k+1;
}
printf(&quot;enter item to search\n&quot;);
scanf(&quot;%d&quot;,&amp;item);
int u=x-1;
while(l&lt;=u){

m=(l+u)/2 ;
if(item&gt;b[m]){
l=m+1;
}
else if(item&lt;b[m]){
u=m-1;
}
else if(item==b[m]){
pos=m;
found1=1;
printf(&quot;item is present in position %d\n&quot;,(pos+1));
break;
}
else{
continue;
}
}
if(found1==0){
printf(&quot;item not found\n&quot;);
}
}
void main(){
int x,ch=-1;
printf(&quot;EBY J KAVUNGAL rollno:14\n&quot;);
while(ch!=4){
printf(&quot;\n-----MENU-----\n1.linear
search\n2.binary search\n3.exit\n&quot;);
printf(&quot;\n&quot;);
printf(&quot;Enter choice:\n&quot;);
scanf(&quot;%d&quot;,&amp;ch);
switch(ch){
case 1: lin();
break;
case 2: bin();
break;
case 3: printf(&quot;exitted the program\n&quot;);
exit(0);
default: printf(&quot;invalid choice!\nenter new
choice&quot;);
}
}
}
