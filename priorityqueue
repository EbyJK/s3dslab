//priority queue
#include <stdio.h>
#include <stdlib.h>
void insert();
void deleteprior();
void deletenode();
void display();
struct node {
    int data;
    int priority;
    struct node *next;
};

struct node *head = NULL;
struct node *tail = NULL;
struct node *front = NULL;
struct node *rear = NULL;

void insert() {
    struct node *p, *ptr, *prev;

    p = (struct node *)malloc(sizeof(struct node));
    printf("Enter data\n");
    scanf("%d", &p->data);
    printf("Enter priority\n");
    scanf("%d", &p->priority);

    if (head == NULL) {
        head = p;
        p->next = NULL;
    } else {
        ptr = head;
        prev = NULL;

        while (ptr != NULL && ptr->priority < p->priority) {
            prev = ptr;
            ptr = ptr->next;
        }

        if (prev == NULL) {
            // Insert at the beginning
            p->next = head;
            head = p;
        } else {
            // Insert in the middle or at the end
            prev->next = p;
            p->next = ptr;
        }
    }
}
void display(){
struct node *ptr;
ptr=head;
if(head==NULL){
printf("Queue Empty!\n");
}
else{ printf("Data\tPriority\n");
while(ptr!=NULL){
printf("%d\t%d\t",ptr->data,ptr->priority);
ptr=ptr->next;
printf("\n");
}
}
}
void deleteprior(){
struct node *ptr;
if(head==NULL){
printf("Queue Empty!\n");
}
else {
if(head==tail){
ptr=head;
head=NULL;
tail=NULL;
printf("Deleted Element with highest priority: %d\n",ptr->data);
free(ptr);
}
else{
ptr=head;
printf("Deleted Element with highest priority: %d\n",ptr->data);
head=ptr->next;
free(ptr);
}
}
}
void deletenode(){
           struct node *ptr,*prev;
 
            int item;
  if(head==NULL){
printf("queue is empty\n");

   }
   else{
printf("enter item to be deleted\n");
scanf("%d",&item);
ptr=head;
prev=NULL;
while(ptr->data!=item){
prev=ptr;
ptr=ptr->next;


}
prev->next=ptr->next;
printf("deleted\n");

 }
}

int main() {
    int ch = -1;
    printf("EBY J KAVUNGAL rollno:14\n");
    printf("ascending order priority queue\n");
    while (ch != 7) {
        printf("\n-----MENU-----\n1.insert\n2.deletepriority\n3.deletenode\n4.display\n5.exit\n");
        printf("Enter choice:\n");
        scanf("%d", &ch);

        switch (ch) {
            case 1:
                insert();
                break;
            case 2:
                deleteprior();
                break;
   case 3: deletenode();
  break;
            case 4:
                display();
                break;
   case 5:printf("Exitted the program..\n");
  exit(0);

            default:
                printf("Invalid choice. Enter a new choice.\n");
        }
    }

    return 0;
}


