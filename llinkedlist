             //Singly Linked List
#include<stdio.h>
#include<stdlib.h>
struct node
{
    int data;
    struct node *next;
};
struct node *p,*head, *tail, *ptr,*prev;

void insertatbeg(){
 
 
    // list not empty
     p=(struct node*)malloc(sizeof(struct node));
     printf("Enter data\n");
scanf("%d",&p->data);
        p->next=NULL;
        if(head==NULL){

head=p;
       tail=p;

}
   else{

     p->next=head;
head=p;

}
printf("inserted...\n");
     
  }


void insertatend(void)
{
 p=(struct node*)malloc(sizeof(struct node));
 printf("Enter the data\n");
 scanf("%d",&p->data);
 p->next=NULL;
 if (head==NULL)
 {
     head=p;
     tail=p;
 }
 else
 {
 tail->next=p;
 tail=p;    
 }
 printf("inserted...\n");
}

void insertatspec(){
  int n;
  p=(struct node*)malloc(sizeof(struct node));
  printf("Enter the data\n");
  scanf("%d",&p->data);
  p->next=NULL;
  ptr=head;
  printf("enter the node after which the new node is to be inserted\n");
  scanf("%d", &n);
  while(ptr->data!=n){
       ptr=ptr->next;
}
p->next =ptr->next ;
        ptr->next=p;
printf("inserted...\n");
}

void deletebeg(){
if (head==NULL){
  printf("List is empty\n");

}
else{
     ptr=head;
     head=ptr->next;
     free(ptr);
     printf("deleted...\n");  
}

}


void deleteend(){
   
    if(head==NULL){

    printf("List is empty\n");
} else{ptr=head;
    while(ptr->next!=NULL)
 {  prev=ptr;
    ptr=ptr->next;
}
prev->next=NULL;
tail=prev;
free(ptr);
printf("deleted....\n");
}}

void deletespec(){
       int item;
       printf("enter item to be deleted\n");
       scanf("%d",&item);
       ptr=head;
       while(ptr->data!=item){
        prev=ptr;
        ptr=ptr->next;
       
}
prev->next=ptr->next;
free(ptr);
printf("deleted...\n");
}

void display(void)
{
    ptr=head;
    printf("The linked list is\n");
    while(ptr!=NULL)
    {
        printf("%d\t",ptr->data);
        ptr=ptr->next;
    }
printf("\n");

}


int main()
{   printf("\nEBY J KAVUNGAL rollno:14\n");
   
    int choice=-1; head=NULL;
    while(choice!=10)
    { printf("-------\n");
    printf("Menu\n1-insert at the beginning\n2-insert at the end\n3-insert after a specified node\n4-delete from beginning\n5-delete from the end\n6-delete a specified node\n7-display\n8-exit\n");
    printf("--------\n");
    printf("Enter choice: \n");
    scanf("%d",&choice);
    switch(choice)
    {
case 1: insertatbeg();
                break;

case 2: insertatend();
              break;
        case 3:insertatspec();
        break;
case 4: deletebeg();
break;
  case 5: deleteend();
break;
case 6: deletespec();
break;
        case 7: display();
             break;
     
        case 8: printf("eXItted the program...\n");
exit(0);    
     
default: printf("Invalid choice.eNTER new choice\n");
    }
   
}
return 0;
}
